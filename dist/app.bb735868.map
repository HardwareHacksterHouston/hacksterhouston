{"version":3,"sources":["link.jsx","linkList.jsx","loginLink.jsx","app.jsx"],"names":["Link","props","state","form","link","id","confirm","list","loginState","errorMessage","cardContent","editedName","e","setState","target","value","editedUrl","editedDescription","saveLink","error","savingIndicator","editLink","url","name","description","saving","deleting","deleteLink","loggedIn","openForm","deleteControl","fetch","method","headers","body","JSON","stringify","then","response","ok","json","text","err","populateLinks","React","Component","LinkList","PubSub","subscribe","_","newCount","links","forEach","push","createControl","createLink","concat","LoginLink","publish","logout","currentUser","$","modal","loginForm","username","password","login","controller","module","exports","require","Controller","fetchLinks","status","path","obj","postJson"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAAMA;;;;;AACF,gBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8EAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AAAEC,MAAAA,IAAI,EAAE,CAAC,MAAKF,KAAL,CAAWG,IAAX,CAAgBC,EAAzB;AAA6BC,MAAAA,OAAO,EAAE,KAAtC;AAA6CF,MAAAA,IAAI,EAAE,MAAKH,KAAL,CAAWG;AAA9D,KAAb;AAFe;AAGlB;;;;iCAEY;AACT,aAAO,KAAKH,KAAL,CAAWM,IAAX,CAAgBL,KAAhB,CAAsBM,UAA7B;AACH;;;6BAEQ;AACL,aAAO;AAAK,QAAA,SAAS,EAAC;AAAf,SACL;AAAK,QAAA,SAAS,EAAC;AAAf,SACG,KAAKC,YAAL,EADH,EAEG,KAAKC,WAAL,EAFH,CADK,CAAP;AAMH;;;kCAEa;AAAA;;AACV,UAAI,KAAKR,KAAL,CAAWC,IAAf,EAAqB;AACjB,eAAO;AAAK,UAAA,SAAS,EAAC;AAAf,WACL,kCACE;AAAK,UAAA,SAAS,EAAC;AAAf,WACE;AAAO,UAAA,IAAI,EAAC,MAAZ;AACO,UAAA,SAAS,EAAC,cADjB;AAEO,UAAA,KAAK,EAAE,KAAKD,KAAL,CAAWS,UAFzB;AAGO,UAAA,WAAW,EAAC,MAHnB;AAIO,UAAA,QAAQ,EAAE,kBAAAC,CAAC;AAAA,mBAAI,MAAI,CAACC,QAAL,CAAc;AAAEF,cAAAA,UAAU,EAAEC,CAAC,CAACE,MAAF,CAASC;AAAvB,aAAd,CAAJ;AAAA;AAJlB,UADF,CADF,EAQE;AAAK,UAAA,SAAS,EAAC;AAAf,WACE;AAAO,UAAA,IAAI,EAAC,MAAZ;AACO,UAAA,SAAS,EAAC,cADjB;AAEO,UAAA,KAAK,EAAE,KAAKb,KAAL,CAAWc,SAFzB;AAGO,UAAA,WAAW,EAAC,oBAHnB;AAIO,UAAA,QAAQ,EAAE,kBAAAJ,CAAC;AAAA,mBAAI,MAAI,CAACC,QAAL,CAAc;AAAEG,cAAAA,SAAS,EAAEJ,CAAC,CAACE,MAAF,CAASC;AAAtB,aAAd,CAAJ;AAAA;AAJlB,UADF,CARF,EAeE;AAAK,UAAA,SAAS,EAAC;AAAf,WACE;AAAO,UAAA,IAAI,EAAC,MAAZ;AACO,UAAA,SAAS,EAAC,cADjB;AAEO,UAAA,KAAK,EAAE,KAAKb,KAAL,CAAWe,iBAFzB;AAGO,UAAA,WAAW,EAAC,aAHnB;AAIO,UAAA,QAAQ,EAAE,kBAAAL,CAAC;AAAA,mBAAI,MAAI,CAACC,QAAL,CAAc;AAAEI,cAAAA,iBAAiB,EAAEL,CAAC,CAACE,MAAF,CAASC;AAA9B,aAAd,CAAJ;AAAA;AAJlB,UADF,CAfF,EAsBE;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,SAAS,EAAC,sBAAhC;AAAuD,UAAA,OAAO,EAAE;AAAA,mBAAM,MAAI,CAACG,QAAL,EAAN;AAAA;AAAhE,kBAtBF,EAuBE;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,SAAS,EAAC,mBAAhC;AAAoD,UAAA,OAAO,EAAE;AAAA,mBAAM,MAAI,CAACL,QAAL,CAAc;AAAEV,cAAAA,IAAI,EAAE,KAAR;AAAegB,cAAAA,KAAK,EAAE;AAAtB,aAAd,CAAN;AAAA;AAA7D,oBAvBF,EAwBG,KAAKC,eAAL,EAxBH,CADK,CAAP;AA4BH,OA7BD,MA6BO;AACH,eAAO,oBAAC,KAAD,CAAO,QAAP,QACL;AAAI,UAAA,SAAS,EAAC;AAAd,WACG,KAAKC,QAAL,EADH,EAEE;AAAG,UAAA,IAAI,EAAE,KAAKnB,KAAL,CAAWE,IAAX,CAAgBkB;AAAzB,WAA+B,KAAKpB,KAAL,CAAWE,IAAX,CAAgBmB,IAA/C,CAFF,CADK,EAKL;AAAI,UAAA,SAAS,EAAC;AAAd,WAA+C,KAAKrB,KAAL,CAAWE,IAAX,CAAgBkB,GAA/D,CALK,EAML;AAAG,UAAA,SAAS,EAAC;AAAb,WACG,KAAKpB,KAAL,CAAWE,IAAX,CAAgBoB,WADnB,CANK,CAAP;AAUH;AACJ;;;sCAEiB;AACd,UAAI,KAAKtB,KAAL,CAAWuB,MAAf,EAAuB;AACnB,eAAO;AAAM,UAAA,SAAS,EAAC;AAAhB,uBAAP;AACH;AACJ;;;mCAEc;AACX,UAAI,KAAKvB,KAAL,CAAWiB,KAAf,EAAsB;AAClB,eAAO;AAAK,UAAA,SAAS,EAAC,yBAAf;AAAyC,UAAA,IAAI,EAAC;AAA9C,WAAuD,KAAKjB,KAAL,CAAWiB,KAAlE,CAAP;AACH;AACJ;;;oCAEe;AAAA;;AACZ,UAAI,KAAKjB,KAAL,CAAWwB,QAAf,EAAyB;AACrB,eAAO,aAAP;AACH,OAFD,MAEO,IAAI,KAAKxB,KAAL,CAAWI,OAAf,EAAwB;AAC3B,eAAO,oBAAC,KAAD,CAAO,QAAP,QACL;AAAM,UAAA,SAAS,EAAC;AAAhB,2BADK,EAEL;AAAG,UAAA,SAAS,EAAC,MAAb;AAAoB,UAAA,OAAO,EAAE;AAAA,mBAAM,MAAI,CAACqB,UAAL,EAAN;AAAA;AAA7B,iBAFK,EAGL;AAAG,UAAA,OAAO,EAAE;AAAA,mBAAM,MAAI,CAACd,QAAL,CAAc;AAAEP,cAAAA,OAAO,EAAE;AAAX,aAAd,CAAN;AAAA;AAAZ,gBAHK,CAAP;AAKH,OANM,MAMA,IAAI,KAAKL,KAAL,CAAWG,IAAX,CAAgBC,EAApB,EAAwB;AAC3B,eAAO;AAAG,UAAA,OAAO,EAAE;AAAA,mBAAM,MAAI,CAACQ,QAAL,CAAc;AAAEP,cAAAA,OAAO,EAAE;AAAX,aAAd,CAAN;AAAA;AAAZ,oBAAP;AACH,OAFM,MAEA;AACH,eAAO,KAAP;AACH;AACJ;;;+BAEU;AAAA;;AACP,UAAI,KAAKE,UAAL,GAAkBoB,QAAtB,EAAgC;AAC5B,eAAO;AAAM,UAAA,SAAS,EAAC;AAAhB,WACL;AAAG,UAAA,OAAO,EAAE;AAAA,mBAAM,MAAI,CAACC,QAAL,EAAN;AAAA;AAAZ,kBADK,eAEC,KAAKC,aAAL,EAFD,CAAP;AAIH,OALD,MAKO;AACH,eAAO,IAAP;AACH;AACJ;;;+BAEU;AAAA;;AACP,WAAKjB,QAAL,CAAc;AAAEY,QAAAA,MAAM,EAAE;AAAV,OAAd;AACAM,MAAAA,KAAK,CAAE,KAAK9B,KAAL,CAAWG,IAAX,CAAgBC,EAAhB,GAAqB,OAArB,GAA+B,SAAjC,EAA6C;AAC9C2B,QAAAA,MAAM,EAAE,MADsC;AAE9CC,QAAAA,OAAO,EAAE;AAAE,0BAAgB;AAAlB,SAFqC;AAG9CC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEb,UAAAA,IAAI,EAAE,KAAKrB,KAAL,CAAWS,UAAnB;AACEW,UAAAA,GAAG,EAAE,KAAKpB,KAAL,CAAWc,SADlB;AAEEQ,UAAAA,WAAW,EAAE,KAAKtB,KAAL,CAAWe,iBAF1B;AAGEZ,UAAAA,EAAE,EAAE,KAAKJ,KAAL,CAAWG,IAAX,CAAgBC;AAHtB,SAAf;AAHwC,OAA7C,CAAL,CAOGgC,IAPH,CAOQ,UAACC,QAAD,EAAc;AAClB,YAAIA,QAAQ,CAACC,EAAb,EAAiB;AACbD,UAAAA,QAAQ,CAACE,IAAT,GAAgBH,IAAhB,CAAqB,UAACjC,IAAD;AAAA,mBAAU,MAAI,CAACS,QAAL,CAAc;AAAET,cAAAA,IAAI,EAAJA;AAAF,aAAd,CAAV;AAAA,WAArB;;AACA,UAAA,MAAI,CAACS,QAAL,CAAc;AAAEY,YAAAA,MAAM,EAAE,KAAV;AAAiBN,YAAAA,KAAK,EAAE,IAAxB;AAA8BhB,YAAAA,IAAI,EAAE;AAApC,WAAd;AACH,SAHD,MAGO;AACHmC,UAAAA,QAAQ,CAACG,IAAT,GAAgBJ,IAAhB,CAAqB,UAAAK,GAAG;AAAA,mBAAI,MAAI,CAAC7B,QAAL,CAAc;AAAEY,cAAAA,MAAM,EAAE,KAAV;AAAiBN,cAAAA,KAAK,EAAEuB;AAAxB,aAAd,CAAJ;AAAA,WAAxB;AACH;AACJ,OAdD;AAeH;;;iCAEY;AAAA;;AACT,WAAK7B,QAAL,CAAc;AAAEa,QAAAA,QAAQ,EAAE;AAAZ,OAAd;AACAK,MAAAA,KAAK,mBAAY,KAAK7B,KAAL,CAAWE,IAAX,CAAgBC,EAA5B,GAAkC;AAAE2B,QAAAA,MAAM,EAAE;AAAV,OAAlC,CAAL,CAA2DK,IAA3D,CAAgE,UAACC,QAAD,EAAc;AAC1E,YAAIA,QAAQ,CAACC,EAAb,EAAiB;AACbI,UAAAA,aAAa;AAChB,SAFD,MAEO;AACHL,UAAAA,QAAQ,CAACG,IAAT,GAAgBJ,IAAhB,CAAqB,UAAAK,GAAG;AAAA,mBAAI,MAAI,CAAC7B,QAAL,CAAc;AAAEa,cAAAA,QAAQ,EAAE,KAAZ;AAAmBpB,cAAAA,OAAO,EAAE,KAA5B;AAAmCa,cAAAA,KAAK,EAAEuB;AAA1C,aAAd,CAAJ;AAAA,WAAxB;AACH;AACJ,OAND;AAOH;;;+BAEU;AACP,WAAK7B,QAAL,CAAc;AAAEV,QAAAA,IAAI,EAAE,IAAR;AACEQ,QAAAA,UAAU,EAAE,KAAKV,KAAL,CAAWG,IAAX,CAAgBmB,IAD9B;AAEEP,QAAAA,SAAS,EAAE,KAAKf,KAAL,CAAWG,IAAX,CAAgBkB,GAF7B;AAGEL,QAAAA,iBAAiB,EAAE,KAAKhB,KAAL,CAAWG,IAAX,CAAgBoB;AAHrC,OAAd;AAIH;;;;EAzIcoB,KAAK,CAACC;;eA4IV;AAAE7C,EAAAA,IAAI,EAAJA;AAAF;;;;;;;;;;AC5If;;;;;;;;;;;;;;;;;;;;;;IAEM8C;;;;;AACF,oBAAY7C,KAAZ,EAAmB;AAAA;;AAAA;;AACf,kFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AAAEM,MAAAA,UAAU,EAAE;AAAd,KAAb;AACAuC,IAAAA,MAAM,CAACC,SAAP,CAAiB,UAAjB,EAA6B,UAACC,CAAD,EAAIzC,UAAJ;AAAA,aAAmB,MAAKK,QAAL,CAAc;AAAEL,QAAAA,UAAU,EAAVA;AAAF,OAAd,CAAnB;AAAA,KAA7B;AACA,UAAK0C,QAAL,GAAgB,CAAhB;AAJe;AAKlB;;;;6BAEQ;AAAA;;AACL,UAAMC,KAAK,GAAG,EAAd;AAEA,WAAKlD,KAAL,CAAWkD,KAAX,CAAiBC,OAAjB,CAAyB,UAAChD,IAAD,EAAU;AAC/B+C,QAAAA,KAAK,CAACE,IAAN,CAAW,oBAAC,aAAD;AAAM,UAAA,IAAI,EAAEjD,IAAZ;AAAkB,UAAA,IAAI,EAAE,MAAxB;AAA8B,UAAA,GAAG,EAAEA,IAAI,CAACC,EAAL,IAAWD,IAAI,CAAC8C;AAAnD,UAAX;AACH,OAFD;AAIA,aAAO,iCAAMC,KAAN,EAAa,KAAKG,aAAL,EAAb,CAAP;AACH;;;oCAEe;AAAA;;AACZ,UAAI,KAAKpD,KAAL,CAAWM,UAAX,CAAsBoB,QAA1B,EAAoC;AAChC,eAAO;AAAK,UAAA,SAAS,EAAC;AAAf,WACL;AAAK,UAAA,SAAS,EAAC;AAAf,WACE;AAAG,UAAA,SAAS,EAAC;AAAb,WACE;AAAG,UAAA,OAAO,EAAE;AAAA,mBAAM,MAAI,CAAC2B,UAAL,EAAN;AAAA;AAAZ,0BADF,CADF,CADK,CAAP;AAOH;AACJ;;;iCAEY;AACT,WAAK1C,QAAL,CAAc;AAAEsC,QAAAA,KAAK,EAAE,KAAKlD,KAAL,CAAWkD,KAAX,CAAiBK,MAAjB,CAAwB,CAAC;AAAEN,UAAAA,QAAQ,gBAAS,EAAE,KAAKA,QAAhB;AAAV,SAAD,CAAxB;AAAT,OAAd;AACH;;;;EAhCkBN,KAAK,CAACC;;eAmCd;AAAEC,EAAAA,QAAQ,EAARA;AAAF;;;;;;;;;;;;;;;;;;;;;;;;;ICrCTW;;;;;AACF,qBAAYxD,KAAZ,EAAmB;AAAA;;AAAA;;AACf,mFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AAAEM,MAAAA,UAAU,EAAE,MAAKP,KAAL,CAAWO;AAAzB,KAAb;AAFe;AAGlB;;;;6BAEQ;AAAA;;AACLuC,MAAAA,MAAM,CAACW,OAAP,CAAe,UAAf,EAA2B,KAAKxD,KAAL,CAAWM,UAAtC;;AACA,UAAI,KAAKN,KAAL,CAAWM,UAAX,CAAsBoB,QAA1B,EAAoC;AAChC,eAAO;AAAG,UAAA,IAAI,EAAC,GAAR;AAAY,UAAA,SAAS,EAAC,sBAAtB;AAA6C,UAAA,OAAO,EAAE;AAAA,mBAAM,MAAI,CAAC+B,MAAL,EAAN;AAAA;AAAtD,sBACG,KAAKzD,KAAL,CAAWM,UAAX,CAAsBoD,WADzB,CAAP;AAGH,OAJD,MAIO;AACH,YAAMxD,IAAI,GAAG;AAAG,UAAA,IAAI,EAAC,GAAR;AACG,UAAA,SAAS,EAAC,0BADb;AAEG,UAAA,OAAO,EAAE;AAAA,mBAAMyD,CAAC,CAAC,aAAD,CAAD,CAAiBC,KAAjB,EAAN;AAAA;AAFZ,mBAAb;AAMA,YAAMA,KAAK,GAAG;AAAK,UAAA,SAAS,EAAC,YAAf;AAA4B,UAAA,EAAE,EAAC,YAA/B;AAA4C,UAAA,QAAQ,EAAC,IAArD;AAA0D,UAAA,IAAI,EAAC,QAA/D;AAAwE,yBAAY;AAApF,WACZ;AAAK,UAAA,SAAS,EAAC,cAAf;AAA8B,UAAA,IAAI,EAAC;AAAnC,WACE;AAAK,UAAA,SAAS,EAAC;AAAf,WACE;AAAK,UAAA,SAAS,EAAC;AAAf,WAA6B,KAAKrD,YAAL,EAA7B,EAAkD,KAAKsD,SAAL,EAAlD,CADF,CADF,CADY,CAAd;AAQA,eAAO,iCAAM3D,IAAN,EAAY0D,KAAZ,CAAP;AACH;AACJ;;;mCAEc;AACX,UAAI,KAAK5D,KAAL,CAAWiB,KAAf,EAAsB;AAClB,eAAO;AAAK,UAAA,SAAS,EAAC,oBAAf;AAAoC,UAAA,IAAI,EAAC;AAAzC,WAAkD,KAAKjB,KAAL,CAAWiB,KAA7D,CAAP;AACH;AACJ;;;gCAEW;AAAA;;AACR,aAAO,kCACL;AAAK,QAAA,SAAS,EAAC;AAAf,SACE;AAAO,QAAA,IAAI,EAAC,MAAZ;AACO,QAAA,SAAS,EAAC,cADjB;AAEO,QAAA,EAAE,EAAC,UAFV;AAGO,QAAA,WAAW,EAAC,UAHnB;AAIO,QAAA,QAAQ,EAAE,kBAAAP,CAAC;AAAA,iBAAI,MAAI,CAACC,QAAL,CAAc;AAAEmD,YAAAA,QAAQ,EAAEpD,CAAC,CAACE,MAAF,CAASC;AAArB,WAAd,CAAJ;AAAA;AAJlB,QADF,CADK,EAQL;AAAK,QAAA,SAAS,EAAC;AAAf,SACE;AAAO,QAAA,IAAI,EAAC,UAAZ;AACO,QAAA,SAAS,EAAC,cADjB;AAEO,QAAA,EAAE,EAAC,UAFV;AAGO,QAAA,WAAW,EAAC,UAHnB;AAIO,QAAA,QAAQ,EAAE,kBAAAH,CAAC;AAAA,iBAAI,MAAI,CAACC,QAAL,CAAc;AAAEoD,YAAAA,QAAQ,EAAErD,CAAC,CAACE,MAAF,CAASC;AAArB,WAAd,CAAJ;AAAA;AAJlB,QADF,CARK,EAeL;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,iBAAhC;AAAkD,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACmD,KAAL,EAAN;AAAA;AAA3D,iBAfK,CAAP;AAiBH;;;;;;;;;;;;;uBAIa,KAAKjE,KAAL,CAAWkE,UAAX,CAAsBD,KAAtB,CAA4B,KAAKhE,KAAL,CAAW8D,QAAvC,EAAiD,KAAK9D,KAAL,CAAW+D,QAA5D;;;AACNJ,gBAAAA,CAAC,CAAC,aAAD,CAAD,CAAiBC,KAAjB,CAAuB,MAAvB;AACA,qBAAKK,UAAL,CAAgBtD,QAAhB,CAAyB;AAAEL,kBAAAA,UAAU,EAAE;AAAEoB,oBAAAA,QAAQ,EAAE,IAAZ;AAAkBgC,oBAAAA,WAAW,EAAE,KAAK1D,KAAL,CAAW8D;AAA1C,mBAAd;AAAoE7C,kBAAAA,KAAK,EAAE;AAA3E,iBAAzB;;;;;;;AAEA,qBAAKN,QAAL,CAAc;AAAEM,kBAAAA,KAAK;AAAP,iBAAd;;;;;;;;;;;;;;;;;;6BAIC;AAAA;;AACLY,MAAAA,KAAK,CAAC,SAAD,EAAY;AACbC,QAAAA,MAAM,EAAE,MADK;AAEbC,QAAAA,OAAO,EAAE;AAAE,0BAAgB;AAAlB;AAFI,OAAZ,CAAL,CAGGI,IAHH,CAGQ,UAACC,QAAD,EAAc;AAClB,YAAIA,QAAQ,CAACC,EAAb,EAAiB;AACb,UAAA,MAAI,CAAC1B,QAAL,CAAc;AAAEL,YAAAA,UAAU,EAAE;AAAEoB,cAAAA,QAAQ,EAAE,KAAZ;AAAmBgC,cAAAA,WAAW,EAAE;AAAhC;AAAd,WAAd;AACH;AACJ,OAPD;AAQH;;;;EA5EmBhB,KAAK,CAACC;;AA+E9BuB,MAAM,CAACC,OAAP,GAAiB;AAAEZ,EAAAA,SAAS,EAATA;AAAF,CAAjB;;;;;;;;;;;;;;;;;;;;;;;;AC/EA;AACA;eAEqBa,OAAO,CAAC,gBAAD;IAApBxB,oBAAAA;;gBACcwB,OAAO,CAAC,iBAAD;IAArBb,sBAAAA;;IAEFc;;;;;AACF,sBAAYtE,KAAZ,EAAmB;AAAA;;AAAA;;AACf,oFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AAAEiD,MAAAA,KAAK,EAAE,EAAT;AAAa3C,MAAAA,UAAU,EAAE;AAAzB,KAAb;;AACA,UAAKgE,UAAL;;AAHe;AAIlB;;;;iCAEY;AAAA;;AACTzC,MAAAA,KAAK,CAAC,QAAD,CAAL,CACKM,IADL,CACU,UAAAC,QAAQ;AAAA,eAAIA,QAAQ,CAACE,IAAT,EAAJ;AAAA,OADlB,EAEKH,IAFL,CAEU,UAAAc,KAAK;AAAA,eAAI,MAAI,CAACtC,QAAL,CAAc;AAAEsC,UAAAA,KAAK,EAALA;AAAF,SAAd,CAAJ;AAAA,OAFf;AAGH;;;iCAEY;AAAA;;AACTpB,MAAAA,KAAK,CAAC,cAAD,CAAL,CACKM,IADL,CACU,UAAAC,QAAQ;AAAA,eAAIA,QAAQ,CAACE,IAAT,EAAJ;AAAA,OADlB,EAEKH,IAFL,CAEU,UAAAoC,MAAM;AAAA,eAAI,MAAI,CAAC5D,QAAL,CAAc;AAAEL,UAAAA,UAAU,EAAEiE;AAAd,SAAd,CAAJ;AAAA,OAFhB;AAGH;;;;;;+CAEcC,MAAMC;;;;;;;uBACM5C,KAAK,CAAC2C,IAAD,EAAO;AAC/B1C,kBAAAA,MAAM,EAAE,MADuB;AAE/BC,kBAAAA,OAAO,EAAE;AAAE,oCAAgB;AAAlB,mBAFsB;AAG/BC,kBAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeuC,GAAf;AAHyB,iBAAP;;;AAAtBrC,gBAAAA;;uBAKaA,QAAQ,CAACG,IAAT;;;AAAbA,gBAAAA;;qBAEFH,QAAQ,CAACC;;;;;iDACFE;;;sBAEDA;;;;;;;;;;;;;;;;;;0BAIRuB,UAAUC,UAAU;AACtB,aAAO,KAAKW,QAAL,CAAc,QAAd,EAAwB;AAAEZ,QAAAA,QAAQ,EAARA,QAAF;AAAYC,QAAAA,QAAQ,EAARA;AAAZ,OAAxB,CAAP;AACH;;;6BAEQ;AACL,aAAO,oBAAC,KAAD,CAAO,QAAP,QACL,oBAAC,QAAD;AAAU,QAAA,KAAK,EAAE,KAAK/D,KAAL,CAAWiD,KAA5B;AAAmC,QAAA,UAAU,EAAE;AAA/C,QADK,EAEL,oBAAC,SAAD;AAAW,QAAA,UAAU,EAAE,KAAKjD,KAAL,CAAWM,UAAlC;AAA8C,QAAA,UAAU,EAAE;AAA1D,QAFK,CAAP;AAIH;;;;EA3CoBoC,KAAK,CAACC,YA8C/B","file":"app.bb735868.map","sourceRoot":"../jsx","sourcesContent":["class Link extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { form: !this.props.link.id, confirm: false, link: this.props.link };\n    }\n\n    loginState() {\n        return this.props.list.state.loginState;\n    }\n\n    render() {\n        return <div className=\"row hackster-link mb-4\">\n          <div className=\"card col-md-8 offset-md-2 col-sm-12\">\n            {this.errorMessage()}\n            {this.cardContent()}\n          </div>\n        </div>;\n    }\n\n    cardContent() {\n        if (this.state.form) {\n            return <div className=\"card-text mt-2\">\n              <form>\n                <div className=\"form-group\">\n                  <input type=\"text\"\n                         className=\"form-control\"\n                         value={this.state.editedName}\n                         placeholder=\"Name\"\n                         onChange={e => this.setState({ editedName: e.target.value })} />\n                </div>\n                <div className=\"form-group\">\n                  <input type=\"text\"\n                         className=\"form-control\"\n                         value={this.state.editedUrl}\n                         placeholder=\"http://example.com\"\n                         onChange={e => this.setState({ editedUrl: e.target.value })} />\n                </div>\n                <div className=\"form-group\">\n                  <input type=\"text\"\n                         className=\"form-control\"\n                         value={this.state.editedDescription}\n                         placeholder=\"Description\"\n                         onChange={e => this.setState({ editedDescription: e.target.value })} />\n                </div>\n                <button type=\"button\" className=\"btn btn-primary mr-1\" onClick={() => this.saveLink()}>Save</button>\n                <button type=\"button\" className=\"btn btn-secondary\" onClick={() => this.setState({ form: false, error: null })}>Cancel</button>\n                {this.savingIndicator()}\n              </form>\n            </div>;\n        } else {\n            return <React.Fragment>\n              <h4 className=\"card-title\">\n                {this.editLink()}\n                <a href={this.state.link.url}>{this.state.link.name}</a>\n              </h4>\n              <h6 className=\"card-subtitle mb-2 text-muted\">{this.state.link.url}</h6>\n              <p className=\"card-text\">\n                {this.state.link.description}\n              </p>\n            </React.Fragment>;\n        }\n    }\n\n    savingIndicator() {\n        if (this.state.saving) {\n            return <span className=\"float-right\">Saving...</span>;\n        }\n    }\n\n    errorMessage() {\n        if (this.state.error) {\n            return <div className=\"alert alert-danger mt-2\" role=\"alert\">{this.state.error}</div>;\n        }\n    }\n\n    deleteControl() {\n        if (this.state.deleting) {\n            return 'deleting...';\n        } else if (this.state.confirm) {\n            return <React.Fragment>\n              <span className=\"mr-2\">are you sure?</span>\n              <a className=\"mr-2\" onClick={() => this.deleteLink()}>yes</a>\n              <a onClick={() => this.setState({ confirm: false })}>no</a>\n            </React.Fragment>;\n        } else if (this.props.link.id) {\n            return <a onClick={() => this.setState({ confirm: true })}>delete</a>;\n        } else {\n            return '---';\n        }\n    }\n\n    editLink() {\n        if (this.loginState().loggedIn) {\n            return <span className=\"small float-right\">\n              <a onClick={() => this.openForm()}>edit</a>&nbsp;|&nbsp;\n                   {this.deleteControl()}\n            </span>;\n        } else {\n            return null;\n        }\n    }\n\n    saveLink() {\n        this.setState({ saving: true });\n        fetch((this.props.link.id ? '/link' : '/create'), {\n            method: 'post',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ name: this.state.editedName,\n                                   url: this.state.editedUrl,\n                                   description: this.state.editedDescription,\n                                   id: this.props.link.id })\n        }).then((response) => {\n            if (response.ok) {\n                response.json().then((link) => this.setState({ link }));\n                this.setState({ saving: false, error: null, form: false });\n            } else {\n                response.text().then(err => this.setState({ saving: false, error: err }));\n            }\n        });\n    }\n\n    deleteLink() {\n        this.setState({ deleting: true });\n        fetch(`/delete/${this.state.link.id}`, { method: 'post' }).then((response) => {\n            if (response.ok) {\n                populateLinks();\n            } else {\n                response.text().then(err => this.setState({ deleting: false, confirm: false, error: err }));\n            }\n        });\n    }\n\n    openForm() {\n        this.setState({ form: true,\n                        editedName: this.props.link.name,\n                        editedUrl: this.props.link.url,\n                        editedDescription: this.props.link.description });\n    }\n}\n\nexport default { Link };\n","import Link from './link.jsx';\n\nclass LinkList extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { loginState: {} };\n        PubSub.subscribe('loggedIn', (_, loginState) => this.setState({ loginState }));\n        this.newCount = 0;\n    }\n\n    render() {\n        const links = [];\n\n        this.props.links.forEach((link) => {\n            links.push(<Link link={link} list={this} key={link.id || link.newCount}/>);\n        });\n\n        return <div>{links}{this.createControl()}</div>;\n    }\n\n    createControl() {\n        if (this.state.loginState.loggedIn) {\n            return <div className=\"row hackster-link mb-4\">\n              <div className=\"card col-md-8 offset-md-2 col-sm-12\">\n                <p className=\"card-text text-center\">\n                  <a onClick={() => this.createLink()}>Add new link</a>\n                </p>\n              </div>\n            </div>;\n        }\n    }\n\n    createLink() {\n        this.setState({ links: this.props.links.concat([{ newCount: `new-${++this.newCount}` }]) });\n    }\n}\n\nexport default { LinkList };\n","class LoginLink extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { loginState: this.props.loginState };\n    }\n\n    render() {\n        PubSub.publish('loggedIn', this.state.loginState);\n        if (this.state.loginState.loggedIn) {\n            return <a href=\"#\" className=\"hackster-logout-link\" onClick={() => this.logout()}>\n              Logout {this.state.loginState.currentUser}\n            </a>;\n        } else {\n            const link = <a href=\"#\"\n                            className=\"hackster-login-link mt-2\"\n                            onClick={() => $('#loginModal').modal()}>\n              Login\n            </a>;\n\n            const modal = <div className=\"modal fade\" id=\"loginModal\" tabIndex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\n              <div className=\"modal-dialog\" role=\"document\">\n                <div className=\"modal-content\">\n                  <div className=\"modal-body\">{this.errorMessage()}{this.loginForm()}</div>\n                </div>\n              </div>\n            </div>;\n\n            return <div>{link}{modal}</div>;\n        }\n    }\n\n    errorMessage() {\n        if (this.state.error) {\n            return <div className=\"alert alert-danger\" role=\"alert\">{this.state.error}</div>;\n        }\n    }\n\n    loginForm() {\n        return <form>\n          <div className=\"form-group\">\n            <input type=\"text\"\n                   className=\"form-control\"\n                   id=\"username\"\n                   placeholder=\"Username\"\n                   onChange={e => this.setState({ username: e.target.value })} />\n          </div>\n          <div className=\"form-group\">\n            <input type=\"password\"\n                   className=\"form-control\"\n                   id=\"password\"\n                   placeholder=\"Password\"\n                   onChange={e => this.setState({ password: e.target.value })} />\n          </div>\n          <button type=\"button\" className=\"btn btn-primary\" onClick={() => this.login()}>Login</button>\n        </form>;\n    }\n\n    async login() {\n        try {\n            await this.props.controller.login(this.state.username, this.state.password);\n            $('#loginModal').modal('hide');\n            this.controller.setState({ loginState: { loggedIn: true, currentUser: this.state.username }, error: null });\n        } catch (err) {\n            this.setState({ error: err });\n        }\n    }\n\n    logout() {\n        fetch('/logout', {\n            method: 'post',\n            headers: { 'Content-Type': 'application/json' }\n        }).then((response) => {\n            if (response.ok) {\n                this.setState({ loginState: { loggedIn: false, currentUser: null } });\n            }\n        })\n    }\n}\n\nmodule.exports = { LoginLink };\n","//import LinkList from './linkList.jsx';\n//import LoginLink from './loginLink.jsx';\n\nconst { LinkList } = require('./linkList.jsx');\nconst { LoginLink } = require('./loginLink.jsx');\n\nclass Controller extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { links: [], loginState: {} };\n        this.fetchLinks();\n    }\n\n    fetchLinks() {\n        fetch('/links')\n            .then(response => response.json())\n            .then(links => this.setState({ links }));\n    }\n\n    fetchLogin() {\n        fetch('/loginStatus')\n            .then(response => response.json())\n            .then(status => this.setState({ loginState: status }));\n    }\n\n    async postJson(path, obj) {\n        const response = await fetch(path, {\n            method: 'post',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify(obj)\n        });\n        const text = await response.text();\n\n        if (response.ok) {\n            return text;\n        } else {\n            throw text;\n        }\n    }\n\n    login(username, password) {\n        return this.postJson('/login', { username, password });\n    }\n\n    render() {\n        return <React.Fragment>\n          <LinkList links={this.state.links} controller={this}/>\n          <LoginLink loginState={this.state.loginState} controller={this} />\n        </React.Fragment>;\n    }\n}\n\n//ReactDOM.render(<Controller/>, document.getElementById('links'));\n\n"]}